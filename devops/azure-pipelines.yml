name: $(date:yyyyMMdd)$(rev:.r)

variables:
  ImageName: 'wesleycosta/to-de-ferias-booking:$(Build.SourceBranchName)'

trigger:
  tags:
    include:
      - '*'

  branches:
    include:
      - main
      - develop
pr:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: BuildApp
    displayName: Build
    workspace:
      clean: all
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
        includePreviewVersions: false

    - task: DotNetCoreCLI@2
      displayName: 'Restore Nuget Packages'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build projects'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--no-restore'

  - job: Tests
    dependsOn: BuildApp
    condition: succeeded()
    variables:
    - group: Common
    workspace:
      clean: all
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
        includePreviewVersions: false

    - task: DotNetCoreCLI@2
      displayName: 'Run Tests'
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: ' --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover'

- stage: PublishDockerImage
  displayName: Publish Docker Image
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  jobs:
  - job: Build
    displayName: Build and push Docker image
    steps:
    - task: Docker@1
      displayName: 'Build the Docker image'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        command: 'Build an image'
        dockerFile: '**/Dockerfile'
        imageName: '$(ImageName)'
        includeLatestTag: true
        useDefaultContext: false
        buildContext: '.'

    - task: Docker@1
      displayName: 'Push the Docker image to Dockerhub'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        command: 'Push an image'
        imageName: '$(ImageName)'
