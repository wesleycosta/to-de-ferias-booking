// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDeFerias.Bookings.Infrastructure.Context;

#nullable disable

namespace ToDeFerias.Bookings.Infrastructure.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20220430002410_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ToDeFerias.Bookings.Domain.Entities.BookingAggregate.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Adults")
                        .HasColumnType("TINYINT");

                    b.Property<byte>("Children")
                        .HasColumnType("TINYINT");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("HouseGuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("HouseGuestId");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings", (string)null);
                });

            modelBuilder.Entity("ToDeFerias.Bookings.Domain.Entities.BookingAggregate.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<byte>("Number")
                        .HasColumnType("TINYINT");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms", (string)null);
                });

            modelBuilder.Entity("ToDeFerias.Bookings.Domain.Entities.BookingAggregate.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes", (string)null);
                });

            modelBuilder.Entity("ToDeFerias.Bookings.Domain.Entities.HouseGuestAggregate.HouseGuest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("HouseGuests", (string)null);
                });

            modelBuilder.Entity("ToDeFerias.Bookings.Domain.Entities.BookingAggregate.Booking", b =>
                {
                    b.HasOne("ToDeFerias.Bookings.Domain.Entities.HouseGuestAggregate.HouseGuest", "HouseGuest")
                        .WithMany("Bookings")
                        .HasForeignKey("HouseGuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToDeFerias.Bookings.Domain.Entities.BookingAggregate.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ToDeFerias.Bookings.Domain.Entities.BookingAggregate.DateRangeBooking", "DateRange", b1 =>
                        {
                            b1.Property<Guid>("BookingId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CheckIn")
                                .HasColumnType("datetime2")
                                .HasColumnName("CheckIn");

                            b1.Property<DateTime>("CheckOut")
                                .HasColumnType("datetime2")
                                .HasColumnName("CheckOut");

                            b1.HasKey("BookingId");

                            b1.ToTable("Bookings");

                            b1.WithOwner()
                                .HasForeignKey("BookingId");
                        });

                    b.Navigation("DateRange")
                        .IsRequired();

                    b.Navigation("HouseGuest");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ToDeFerias.Bookings.Domain.Entities.BookingAggregate.Room", b =>
                {
                    b.HasOne("ToDeFerias.Bookings.Domain.Entities.BookingAggregate.RoomType", "Type")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ToDeFerias.Bookings.Domain.Entities.HouseGuestAggregate.HouseGuest", b =>
                {
                    b.OwnsOne("ToDeFerias.Bookings.Domain.Entities.HouseGuestAggregate.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("HouseGuestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("VARCHAR(11)")
                                .HasColumnName("Cpf");

                            b1.HasKey("HouseGuestId");

                            b1.ToTable("HouseGuests");

                            b1.WithOwner()
                                .HasForeignKey("HouseGuestId");
                        });

                    b.OwnsOne("ToDeFerias.Bookings.Domain.Entities.HouseGuestAggregate.DateOfBirth", "DateOfBirth", b1 =>
                        {
                            b1.Property<Guid>("HouseGuestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("Birthday")
                                .HasColumnType("DATE")
                                .HasColumnName("DateOfBirth");

                            b1.HasKey("HouseGuestId");

                            b1.ToTable("HouseGuests");

                            b1.WithOwner()
                                .HasForeignKey("HouseGuestId");
                        });

                    b.OwnsOne("ToDeFerias.Bookings.Domain.Entities.HouseGuestAggregate.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("HouseGuestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("VARCHAR(254)")
                                .HasColumnName("Email");

                            b1.HasKey("HouseGuestId");

                            b1.ToTable("HouseGuests");

                            b1.WithOwner()
                                .HasForeignKey("HouseGuestId");
                        });

                    b.Navigation("Cpf");

                    b.Navigation("DateOfBirth");

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("ToDeFerias.Bookings.Domain.Entities.BookingAggregate.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("ToDeFerias.Bookings.Domain.Entities.BookingAggregate.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("ToDeFerias.Bookings.Domain.Entities.HouseGuestAggregate.HouseGuest", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
